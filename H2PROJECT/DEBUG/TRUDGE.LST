
                                                                        PAGE   1
                                                                        04-26-96
                                                                        21:51:59

     Line#  Source Line     Microsoft Fortran PowerStation Compiler. Version 4.0

     1  
     2  
     3        SUBROUTINE TRUDGE(K,FUNC)                                         
     4        IMPLICIT REAL*8(A-H,O-Z)
     5  C                                                                       
     6  C     PROGRAM MINIMIZES A FUNCTION OF N VARIABLES BY A MODFIED POWELL   
     7  C     METHOD OF SEARCH ALONG CONJUGATE DIRECTIONS. COLUMNS OF V MATRIX  
     8  C     ARE CURRENT SEARCH DIRECTIONS.COLUMNS 1 TO K ARE (APROXIMATELY)   
     9  C     CONJUGATE.                                                        
    10  C                                                                       
    11  C     WHEN SUBROUTINE IS ENTERED WITH RESTART=.TRUE. THEN VALUES OF K   
    12  C     AND ALL QUANTITIES IN COMMON T1 SHOULD HAVE BEEN SET PREVIOUSLY   
    13  C     BY THE CALLING PROGRAM.                                           
    14  C     WHEN TRUDGE IS CALLING WITH K NEGATIVE THEN ONLY REQUIRED VALUES  
    15  C     ARE TIMLIM,TOLF,TOLR,NOISE,N,AND R.(NOISE NEEDED FOR SEARCH)      
    16  C     IN THIS CASE INITIAL VALUES OF K,JSTART,RESTART,ALPH,V ARE IGNORED
    17  C     IF TRUDGE IS CALLED WITH NON-NEGATIVE K AND RESTA-T=.FALSE. THEN  
    18  C     VALUES OF TIMLIM,TOLF,TOLR,NOISE,N,R,AND V ARE REQUIRED.          
    19  C     IN THIS CASE K IS RESET TO ZERO AFTER FIRST PASS.                 
    20  C                                                                       
    21  C     EXTERNAL FUNCTION FUNC(INOUT)                                     
    22  C     INOUT=  2   FUNCTION READS MINIMAL STARTING DATA AND EVALUATES F(R
    23  C     INOUT=  1   FUNCTION READS ALL RESTART DATA AND EVALUATES F(R)    
    24  C     INOUT=  0   FUNCTION EVALUATES F(R)                               
    25  C     INOUT= -1   FUNCTION PUNCHES DATA FOR FUTURE CALL FUNC(1)         
    26  C     INOUT= -2   FUNCTION EVALUATES F(R) AND PRINTS OUTPUT.            
    27  C                                                                       
    28        COMMON/T1/ N,NMAX,F,R(500),DR(500),CURVE,ALPHA,NOISE,EXACT,
    29       *           ALPH(500)
    30       1,RNOT(500), V(500,500), CURV(500),RESTART, 
    31       1 JSTART, FNOT, TIMLIM,      
    32       2 TOLF,TOLR 
    33        COMMON /PASSIT/ M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,CO
    34        COMMON/EIGMAT/G(500,500),Q(500,500),SCRAP1(500),
    35       1 SCRAP2(500),
    36       *              SCRAP3(500)  
    37        DIMENSION P(500),U(500),EVEC(50)                                  
    38        LOGICAL EXACT, RESTART                                            
    39        REAL*8 NOISE
    40        EXTERNAL FUNC                                                     
    41        NMAX=500
    42  	III=1
    43        
    44  C      WRITE(6,*)TOLF,TOLR,NOISE
    45  C      pause
    46                                                                  
    47        IF(N.GT.NMAX) STOP 'N GT 180'
    48        FN=N                                                              
    49        INOUT=0                                                           
    50        IF(K.LT.0) GO TO 15                                               
    51        IF(.NOT.RESTART) CALL FUNC(INOUT)                                 
    52        DO 10 I=1,N                                                       
    53     10 IF(ALPH(I).LE.0.D+00) ALPH(I)=1.D-01                              
    54        IF(JSTART.LE.0.OR.JSTART.GT.N) JSTART=N                           
    55        J=JSTART                                                          
    56        RESTART=RESTART.AND.K.NE.N                                        
    57        GO TO 100                                                         

                                                                        PAGE   2
                                                                        04-26-96
                                                                        21:51:59

     Line#  Source Line     Microsoft Fortran PowerStation Compiler. Version 4.0

    58  C                                                                       
    59  C     IF K NEGATIVE SET INITIAL V MATRIX TO IDENTITY,STANDARD VALUES.   
    60  C                                                                       
    61     15 K=N                                                               
    62        RESTART=.FALSE.                                                   
    63        CALL FUNC(INOUT)                                                  
    64        DO 30 I=1,N                                                       
    65        ALPH(I)=1.D-01                                                    
    66        DO 20 J=1,N                                                       
    67     20 V(I,J)=0.D+00                                                     
    68        CURV(I)=0.D+00                                                    
    69     30 V(I,I)=1.D+00                                                     
    70        J=N                                                               
    71  C                                                                       
    72  C     SEARCH ALONG J-TH DIRECTION FOR LOCAL MINIMUM                     
    73  C                                                                       
    74    100 DO 105 I=1,N                                                      
    75    105 DR(I)=V(I,J)                                                      
    76        EXACT=J.LE.K                                                      
    77        ALPHA=ALPH(J)                                                     
    78        ALFSET=ALPHA                                                      
    79        CALL SEARCH(LEAVE,FUNC)                                          
    80  C      open (unit=6,access='append',form='formatted')
    81  C      WRITE(6,120) CURVE,ALPHA                                         
    82  C      close (6)
    83    120 FORMAT(17H  NEW CURVATURE =,E13.5,10H   ALPHA =,F12.7)            
    84    121 FORMAT(17H  OLD CURVATURE =,E13.5,10H   ALFSET=,F12.7)            
    85    122 FORMAT(20X,30H ABNORMAL RETURN FROM SEARCH  )                     
    86        ALPHA=ABS(ALPHA)                                                 
    87        IF(ALPHA.LT.5.D-01*ALFSET) ALFSET=5.D-01*ALFSET                   
    88        IF(ALPHA.LT.25.D-02*ALFSET) ALFSET=5.D-1*ALFSET                   
    89        IF(ALPHA.GT.2.D+00*ALFSET) ALFSET=2.D+00*ALFSET                   
    90        IF(ALPHA.GT.4.D+00*ALFSET) ALFSET=2.D+00*ALFSET                   
    91        open (unit=6,access='append',form='formatted')
    92  C      WRITE(6,121) CURV(J),ALFSET                                      
    93        close (6)
    94        CURV(J)=CURVE                                                     
    95        ALPH(J)=ALFSET                                                    
    96        IF(J.EQ.1) GO TO 175                                              
    97        J=J-1                                                             
    98        GO TO 100
    99  C                                                                       
   100  C     CALL FUNC(-1) CAUSES ALL RESTART DATA TO BE OUTPUT,               
   101  C     THIS INCLUDES ALL DATA REQUIRED FOR FUTURE CALL FUNC(1).          
   102  C                                                                       
   103        open (unit=6,access='append',form='formatted')
   104  C  150 WRITE(6,155) K,TIMLIM,TOLF,TOLR,NOISE,J,FNOT                     
   105   150  close (6)
   106    155 FORMAT(I10,F10.0,3E10.1,I10,F20.10)                               
   107        INOUT=-2                                                          
   108        CALL FUNC(INOUT)                                                  
   109        DO 160 I=1,N                                                      
   110        open (unit=6,access='append',form='formatted')
   111  C  160 WRITE(6,161)I,RNOT(I),CURV(I),ALPH(I)                            
   112    160 close (6)
   113    161 FORMAT(I5,3E20.10)                                                
   114        I1=1                                                              

                                                                        PAGE   3
                                                                        04-26-96
                                                                        21:51:59

     Line#  Source Line     Microsoft Fortran PowerStation Compiler. Version 4.0

   115    165 I2=I1+7                                                           
   116        IF(I2.GT.N) I2=N                                                  
   117        DO 166 L=1,N                                                      
   118        open (unit=6,access='append',form='formatted')
   119  C  166 WRITE(6,168)(V(L,I),I=I1,I2)                                     
   120    166    close (6)
   121    168 FORMAT(8F10.7)                                                    
   122        I1=I2+1                                                           
   123        IF(I1.LE.N) GO TO 165                                             
   124        K=0                                                               
   125        RETURN
   126  C                                                                       
   127  C     END OF SEQUENCE OF SEARCH ALONG ALL DIRECTIONS IN V MATRIX.       
   128  C                                                                       
   129    175 IF(RESTART) GO TO 185                                             
   130        DO 180 I=1,N                                                      
   131    180 RNOT(I)=R(I)                                                      
   132        RESTART=.TRUE.                                                    
   133        FNOT=F                                                            
   134        K=0                                                               
   135        J=N                                                               
   136        GO TO 100                                                         
   137  C                                                                       
   138  C     GENERATE NEW CONJUGATE DIRECTION IF NOT CONVERGED.                
   139  C                                                                       
   140    185 DRDR=0.D+00                                                       
   141        DO 188 I=1,N                                                      
   142        DUM=R(I)-RNOT(I)                                                  
   143        DR(I)=DUM                                                         
   144    188 DRDR=DUM*DUM+DRDR                                                 
   145        ALFSET=SQRT(DRDR)                                                
   146        ALPHA=ALFSET                                                      
   147        IF(ALPHA.EQ.0.D+00) GO TO 192                                     
   148        DO 190 I=1,N                                                      
   149        U(I)=DR(I)/ALFSET                                                 
   150    190 DR(I)=U(I)                                                        
   151        EXACT=.TRUE.                                                      
   152        CALL SEARCH(LEAVE,FUNC)
   153        open (unit=6,access='append',form='formatted')
   154        IF(LEAVE.NE.0) WRITE(6,122)                                       
   155  C      WRITE(6,120) CURVE,ALPHA                                         
   156        close (6)
   157  C      ALPHA=ABS(ALPHA)                                                 
   158    192 DELF=FNOT-F                                                       
   159        FNOT=F                                                            
   160        DRDR=0.D+00                                                       
   161        DO 195 I=1,N                                                      
   162        DRDR=(R(I)-RNOT(I))**2+DRDR
   163    195 RNOT(I)=R(I)                                                      
   164        DELR=SQRT(DRDR/FN)                                               
   165        open (unit=6,access='append',form='formatted')
   166        I=1
   167        J=1
   168  	WRITE(6,*) 'ITERATION INDEX: ',III
   169  	WRITE(7,*) 'ITERATION INDEX: ',III
   170        CALL BIOUT('------------------------------------------------------
   171       1---------------------')

                                                                        PAGE   4
                                                                        04-26-96
                                                                        21:51:59

     Line#  Source Line     Microsoft Fortran PowerStation Compiler. Version 4.0

   172  	III=III+1
   173        CALL BIOUT('     LinCoeff:.   AA1:        AA2:        B12:        
   174  	1RZ1:       RZ2:')
   175        CALL BIOUT('FNC: =================================================
   176       1=====================')
   177   606  IF (J .LE. N/5) THEN
   178   1111 FORMAT(I3,6D12.4)
   179            WRITE(6,1111) J,EVEC(J),R(I),R(I+1),R(I+2),R(I+3),R(I+4)
   180            WRITE(7,1111) J,EVEC(J),R(I),R(I+1),R(I+2),R(I+3),R(I+4)
   181            I=I+5
   182            J=J+1
   183        GOTO 606
   184        END IF
   185        CALL BIOUT('------------------------------------------------------
   186       1---------------------')
   187        WRITE(6,210) F, DELF, DELR 
   188        WRITE(7,210) F, DELF, DELR 
   189        CALL BIOUT(' ')
   190  
   191       
   192       
   193       
   194                                              
   195        close (6)
   196    210 FORMAT(4H  E=,F20.15,10H  DELTA E=,E15.9,10H  DELTA R=,E15.9)     
   197        IF(DELF.GT.TOLF.OR.DELR.GT.TOLR) GO TO 220                        
   198        open (unit=6,access='append',form='formatted')
   199        WRITE(6,215)                                                      
   200        close (6)
   201    215 FORMAT(//,' CONVERGED')                                           
   202        GO TO 150                                                         
   203    220 IF(K.GT.0) GO TO 230                                              
   204        K=1                                                               
   205        K1=0                                                              
   206        DO 225 I=1,N                                                      
   207    225 R(I)=DR(I)                                                        
   208        DR(N)=CURVE                                                       
   209        P(1)=ALPHA                                                        
   210        GO TO 375                                                         
   211  C                                                                       
   212  C     CALCULATE K+1 Q VECTORS.Q(I) DOT V(J)=KRONIKER DELTA(I,J),J=1,K   
   213  C                                                                       
   214    230 DO 250 J=1,K                                                      
   215        DOT=0.D+00                                                        
   216        DO 240 I=1,N                                                      
   217    240 DOT=DR(I)*V(I,J)+DOT                                              
   218        P(J)=DOT                                                          
   219        DO 250 I=1,N                                                      
   220    250 DR(I)=DR(I)-DOT*V(I,J)                                            
   221        DOT=0.D+00                                                        
   222        DO 260 I=1,N                                                      
   223    260 DOT=DR(I)*U(I)+DOT                                                
   224        K1=K                                                              
   225        K=K1+1                                                            
   226        RESTART=K.NE.N                                                    
   227        DO 270 I=1,N                                                      
   228        DUM=DR(I)/DOT                                                     

                                                                        PAGE   5
                                                                        04-26-96
                                                                        21:51:59

     Line#  Source Line     Microsoft Fortran PowerStation Compiler. Version 4.0

   229        Q(I,K)=DUM                                                        
   230        DO 270 J=1,K1                                                     
   231    270 Q(I,J)=V(I,J)-P(J)*DUM                                            
   232  C                                                                       
   233  C     G MATRIX=SUM L=1,K+1 OF Q(L)*CURV(L)*TRANSPOSE Q(L)               
   234  C                                                                       
   235        DO 280 I=1,N                                                      
   236        DUM=CURVE*Q(I,K)                                                  
   237        DO 280 J=1,N                                                      
   238    280 G(I,J)=DUM*Q(J,K)                                                 
   239        DO 300 L=1,K1                                                     
   240        DO 300 I=1,N                                                      
   241        DUM=CURV(L)*Q(I,L)                                                
   242        DO 300 J=1,N                                                      
   243    300 G(I,J)=DUM*Q(J,L)+G(I,J)                                          
   244        CALL EIGN(N,DR)                                                   
   245  C                                                                       
   246  C     SET P(J) EQUAL TO CORRESPONDING ALPH VALUE.                       
   247  C                                                                       
   248        DO 350 J=1,K                                                      
   249        JJ=N+1-J                                                          
   250        P(J)=ALPH(J)                                                      
   251        DOT=0.D+00                                                        
   252        DO 310 I=1,N                                                      
   253        R(I)=Q(I,JJ)                                                      
   254    310 DOT=R(I)*V(I,J)+DOT                                               
   255        DOT=ABS(DOT)                                                     
   256        IF(DOT.GT.7.D-01) GO TO 350                                       
   257        LMAX=J                                                            
   258        DOTMAX=DOT                                                        
   259        DO 340 L=1,K1                                                     
   260        IF(L.EQ.J) GO TO 340                                              
   261        DOT=0.D+00                                                        
   262        DO 320 I=1,N                                                      
   263    320 DOT=R(I)*V(I,L)+DOT                                               
   264        DOT=ABS(DOT)                                                     
   265        IF(DOT.LT.7.D-01) GO TO 330                                       
   266        P(J)=ALPH(L)                                                      
   267        GO TO 350                                                         
   268    330 IF(DOT.LE.DOTMAX) GO TO 340                                       
   269        DOTMAX=DOT                                                        
   270        LMAX=L                                                            
   271    340 CONTINUE                                                          
   272        P(J)=ALPH(LMAX)                                                   
   273        DOT=0.D+00                                                        
   274        DO 345 I=1,N                                                      
   275    345 DOT=R(I)*U(I)+DOT                                                 
   276        IF(ABS(DOT).GT.DOTMAX) P(J)=ALPHA                                
   277    350 CONTINUE                                                          
   278  C                                                                       
   279  C     SET NEV CONJUGATE VECTORS IN V EXCEPT KTH VECTOR IS SAVED IN R.   
   280  C                                                                       
   281        DO 370 J=1,K1                                                     
   282        JJ=N+1-J                                                          
   283        DO 360 I=1,N                                                      
   284    360 V(I,J)=Q(I,JJ)                                                    
   285        ALPH(J)=P(J)                                                      

                                                                        PAGE   6
                                                                        04-26-96
                                                                        21:51:59

     Line#  Source Line     Microsoft Fortran PowerStation Compiler. Version 4.0

   286    370 CURV(J)=DR(JJ)                                                    
   287  C                                                                       
   288  C     ORTHOGONALIZE REMAINING SEARCH DIRECTIONS TO CONJUGATE DIRECTIONS.
   289  C                                                                       
   290    375 IF(K.EQ.N) GO TO 450                                              
   291        DO 420 J=K,N                                                      
   292        DOT=0.D+00                                                        
   293        DO 380 I=1,N                                                      
   294    380 DOT=V(I,J)*R(I)+DOT                                               
   295        DO 390 I=1,N                                                      
   296    390 V(I,J)=V(I,J)-DOT*R(I)                                            
   297        IF(K.EQ.1) GO TO 420                                              
   298        DO 410 L=1,K1                                                     
   299        DOT=0.D+00                                                        
   300        DO 400 I=1,N                                                      
   301    400 DOT=V(I,J)*V(I,L)+DOT                                             
   302        DO 410 I=1,N                                                      
   303    410 V(I,J)=V(I,J)-DOT*V(I,L)                                          
   304    420 CONTINUE                                                          
   305        CMAX=0.D+00                                                       
   306        DO 425 L=K,N                                                      
   307    425 IF(CURV(L).GT.CMAX) CMAX=CURV(L)                                  
   308  C                                                                       
   309  C     CONSTRUCT G MATRIX FOR REMAINING SEARCH DIRECTIONS.               
   310  C                                                                       
   311        CMAX=8.D+00*CMAX                                                  
   312        DO 440 I=1,N                                                      
   313        DO 440 J=1,I                                                      
   314        DUM=-CMAX*R(I)*R(J)                                               
   315        DO 430 L=K,N                                                      
   316    430 DUM=CURV(L)*V(I,L)*V(J,L)+DUM                                     
   317        IF(K1.LE.0) GO TO 435                                             
   318        DO 433 L=1,K1                                                     
   319    433 DUM=-CMAX*V(I,L)*V(J,L)+DUM                                       
   320    435 G(I,J)=DUM                                                        
   321    440 G(J,I)=DUM                                                        
   322  C                                                                       
   323  C     SET KTH CONJUGATE DIRECTIONS BACK INTO V MATRIX.                  
   324  C                                                                       
   325    450 DO 460 I=1,N                                                      
   326        V(I,K)=R(I)                                                       
   327    460 R(I)=RNOT(I)                                                      
   328        ALPH(K)=P(K)                                                      
   329        CURV(K)=DR(N+1-K)                                                 
   330        IF(K.EQ.N) GO TO 480                                              
   331        CALL EIGN(N,DR)                                                   
   332  C                                                                       
   333  C     SET REMAINING SEARCH DIRECTIONS INTO V MATRIX.                    
   334  C                                                                       
   335        K1=K+1                                                            
   336        DO 470 J=K1,N                                                     
   337        CURV(J)=DR(J)                                                     
   338        DO 470 I=1,N                                                      
   339    470 V(I,J)=Q(I,J)                                                     
   340    480 J=N                                                               
   341        GO TO 100
   342        END                                                               

                                                                        PAGE   7
                                                                        04-26-96
                                                                        21:51:59

     Line#  Source Line     Microsoft Fortran PowerStation Compiler. Version 4.0


TRUDGE@8  Local symbols
Name                      Class              Type           Size


/EIGMAT/. . . . . . . . . EIGMAT(0)          MULTI*4012000 4012000
/PASSIT/. . . . . . . . . PASSIT(0)          MULTI*500       500
/T1/. . . . . . . . . . . T1(0)              MULTI*2020084 2020084
ALFSET. . . . . . . . . . local              REAL*8            8
ALPH. . . . . . . . . . . T1(8044)           REAL*8         4000
ALPHA . . . . . . . . . . T1(8024)           REAL*8            8
CMAX. . . . . . . . . . . local              REAL*8            8
CURV. . . . . . . . . . . T1(2016044)        REAL*8         4000
CURVE . . . . . . . . . . T1(8016)           REAL*8            8
DELF. . . . . . . . . . . local              REAL*8            8
DELR. . . . . . . . . . . local              REAL*8            8
DOT . . . . . . . . . . . local              REAL*8            8
DOTMAX. . . . . . . . . . local              REAL*8            8
DR. . . . . . . . . . . . T1(4016)           REAL*8         4000
DRDR. . . . . . . . . . . local              REAL*8            8
DUM . . . . . . . . . . . local              REAL*8            8
EVEC. . . . . . . . . . . PASSIT(76)         REAL*8          400
EXACT . . . . . . . . . . T1(8040)           INTEGER*4         4
F . . . . . . . . . . . . T1(8)              REAL*8            8
FN. . . . . . . . . . . . local              REAL*8            8
FNOT. . . . . . . . . . . T1(2020052)        REAL*8            8
FUNC. . . . . . . . . . . param                                4
G . . . . . . . . . . . . EIGMAT(0)          REAL*8       2000000
I . . . . . . . . . . . . dynam              INTEGER*4         4
I1. . . . . . . . . . . . local              INTEGER*4         4
I2. . . . . . . . . . . . local              INTEGER*4         4
III . . . . . . . . . . . local              INTEGER*4         4
INOUT . . . . . . . . . . local              INTEGER*4         4
J . . . . . . . . . . . . dynam              INTEGER*4         4
JJ. . . . . . . . . . . . local              INTEGER*4         4
JSTART. . . . . . . . . . T1(2020048)        INTEGER*4         4
K . . . . . . . . . . . . param                                4
K1. . . . . . . . . . . . local              INTEGER*4         4
L . . . . . . . . . . . . dynam              INTEGER*4         4
LEAVE . . . . . . . . . . local              INTEGER*4         4
LMAX. . . . . . . . . . . local              INTEGER*4         4
N . . . . . . . . . . . . T1(0)              INTEGER*4         4
NMAX. . . . . . . . . . . T1(4)              INTEGER*4         4
P . . . . . . . . . . . . local              REAL*8         4000
Q . . . . . . . . . . . . EIGMAT(2000000)    REAL*8       2000000
R . . . . . . . . . . . . T1(16)             REAL*8         4000
RESTART . . . . . . . . . T1(2020044)        INTEGER*4         4
RNOT. . . . . . . . . . . T1(12044)          REAL*8         4000
TOLF. . . . . . . . . . . T1(2020068)        REAL*8            8
TOLR. . . . . . . . . . . T1(2020076)        REAL*8            8
U . . . . . . . . . . . . local              REAL*8         4000
V . . . . . . . . . . . . T1(16044)          REAL*8       2000000



                                                                        PAGE   8
                                                                        04-26-96
                                                                        21:51:59

     Line#  Source Line     Microsoft Fortran PowerStation Compiler. Version 4.0


Global Symbols
Name                      Class              Type           Size


BIOUT@8 . . . . . . . . . extern             ***             ***
EIGMAT. . . . . . . . . . common             ***          4012000
EIGN@8. . . . . . . . . . extern             ***             ***
F90_CLOSE . . . . . . . . extern             INTEGER*0       ***
F90_ENDWRITE. . . . . . . extern             INTEGER*0       ***
F90_OPEN. . . . . . . . . extern             INTEGER*0       ***
F90_WRITE . . . . . . . . extern             INTEGER*0       ***
LWRITE_CH . . . . . . . . extern             INTEGER*0       ***
LWRITE_I. . . . . . . . . extern             INTEGER*0       ***
PASSIT. . . . . . . . . . common             ***             500
SEARCH@8. . . . . . . . . extern             ***             ***
T1. . . . . . . . . . . . common             ***          2020084
TRUDGE@8. . . . . . . . . FUNCT              ***             ***
WRITE_D . . . . . . . . . extern             INTEGER*0       ***
WRITE_I . . . . . . . . . extern             INTEGER*0       ***


No errors detected