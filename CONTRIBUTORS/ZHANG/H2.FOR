C     L. ADAMOWICZ RESEARCH / UNIVERSITY OF ARIZONA /  CHEM
C     -----------------------------------------------------
C     Coded:									   D. Gilmore
C
C     --- PROGRAM CORE: ---
C     -----------------------------------------------------   
      IMPLICIT REAL*8 (A-H,O-Z)
	INTEGER ERROR,METHODGEN,METHODOPT,DFLAG,ISYMM,RESTART,WAVEOPT,
	-		STARTBASIS,ENDBASIS,LOOP,RELOADFLAG,INDEX,PREOPT,STGROW
      INTEGER*2 TMPDAY,TMPMONTH,TMPYEAR,TMPHOUR,TMPMINUTE,TMPSECOND,
	-			TMPHUND
	CHARACTER	rSTR*66,FILENAME*66,METHODNAME*66,GENNAME*66,
	-			RESTARTNAME*66,RESTARTOUTPUT*66,OPTIMIZEDWAVE*66
C     -----------------------------------------------------
      REAL*8  AA1[ALLOCATABLE](:),RX1[ALLOCATABLE](:),
	-		RY1[ALLOCATABLE](:),RZ1[ALLOCATABLE](:),
     -		AA2[ALLOCATABLE](:),RX2[ALLOCATABLE](:),
     -		RY2[ALLOCATABLE](:),RZ2[ALLOCATABLE](:),
     -		B12[ALLOCATABLE](:),EVEC[ALLOCATABLE](:)
C
      REAL*8	S [ALLOCATABLE](:,:),H[ALLOCATABLE](:,:),
	-		CO[ALLOCATABLE](:),ENRGY[ALLOCATABLE](:)
	REAL*8	GRAD[ALLOCATABLE](:),T1[ALLOCATABLE](:),
	-		T2  [ALLOCATABLE](:),T3[ALLOCATABLE](:)
	REAL*8  EVECSTORE[ALLOCATABLE](:,:),TSTORE1[ALLOCATABLE](:,:),
	-		TSTORE2[ALLOCATABLE](:,:),TSTORE3[ALLOCATABLE](:,:),
	-		RZ1STORE[ALLOCATABLE](:,:),RZ2STORE[ALLOCATABLE](:,:)
	REAL*8  EVECSTORET[ALLOCATABLE](:),TSTORE1T[ALLOCATABLE](:),
	-		TSTORE2T[ALLOCATABLE](:),TSTORE3T[ALLOCATABLE](:),
	-		RZ1STORET[ALLOCATABLE](:),RZ2STORET[ALLOCATABLE](:)
	REAL*4 TEMP
	REAL*8 Q(2,2),Y(2,2),INDX(2),F(2)
C     -----------------------------------------------------
	COMMON /FINALGRAD/ GG
C     -----------------------------------------------------
      INCLUDE 'FLIB.FD'
C     -----------------------------------------------------
C     =====================================================
C	DEFAULT VALUES:
C     =====================================================
	IMODE=0
	METHODOPT=1
	METHODGEN=1
      M=3
	FILENAME='H2_PROJECT.OUT'
	RESTARTNAME='61.DAT'
	RESTARTOUTPUT='RESTART_H2_PROJECT.DAT'
	OPTIMIZEDWAVE='OPTIMAL_WAVEFUNCTION.DAT'
	ISYMM=1
	RESTART=0
	STGROW=0
	PREOPT=1
	ISTEND=256
	STGROWPER=50
C     =====================================================
	IF (IMODE) THEN
 100	READ(*,*) rSTR
	IF (rSTR .NE. ':BEGIN:') GOTO 100
 200  READ(*,*) rSTR
	IF (rSTR .EQ. ':END:') GOTO 300
		IF (rSTR .EQ. 'NUMBER_OF_FUNCTIONS=') READ(*,*) M
C
		IF (rSTR .EQ. 'FUNCTION_GENERATION=') THEN
			READ(*,*) rSTR
			IF (rSTR .EQ. 'random') METHODGEN=1
		END IF
C
		IF (rSTR .EQ. 'SYMMETRY=') THEN
			READ(*,*) rSTR
			IF (rSTR .EQ. 'ON') THEN ISYMM=1
				ELSE ISYMM=0
		END IF
C
		IF (rSTR .EQ. 'OPTIMIZATION_METHOD=') THEN
			READ(*,*) rSTR
			IF (rSTR .EQ. 'none') METHODOPT=0
			IF (rSTR .EQ. 'imsl:duming') METHODOPT=1
			IF (rSTR .EQ. 'imsl:duminf') METHODOPT=2
		END IF
C
		IF (rSTR .EQ. 'OPTIMIZED_WAVEFUNCTION_OUTPUT_FILE=') READ
	-			(*,*) OPTIMIZEDWAVE
C
		IF (rSTR .EQ. 'OUTPUT_FILE=') READ(*,*) FILENAME
C
		IF (rSTR .EQ. 'RESTART_FILE=') READ(*,*) RESTARTOUTPUT
C
		IF (rSTR .EQ. 'START_FROM_RESTART=') THEN
			READ(*,*) rSTR
			IF (rSTR .EQ. 'true') RESTART=1
			IF (rSTR .EQ. 'false') RESTART=0
		END IF
C
		IF (rSTR .EQ. 'RESTART_FROM=') READ(*,*) RESTARTNAME
C
		IF (rSTR .EQ. 'PRE-OPTIMIZE_BEFORE_STOCHASTIC_GROWTH=') THEN
			READ(*,*) rSTR
			IF (rSTR .EQ. 'true') PREOPT=1
			IF (rSTR .EQ. 'false') PREOPT=0
		END IF
C
		IF (rSTR .EQ. 'STOCHASTIC_END=') READ(*,*) ISTEND
C
		IF (rSTR .EQ. 'STOCHASTIC_PERCENTAGE_GROW=') THEN
			READ (*,*) rSTR
			IF (rSTR .EQ. 'true') STGROW=1
			IF (rSTR .EQ. 'false') STGROW=0
		END IF
C
		IF (rSTR .EQ. 'STOCHASTIC_GROW_PERCENTAGE=') 
	-			READ(*,*) STGROWPER
C
	GOTO 200
C     =====================================================
 300	END IF
 	MMAX=M
C
      ALLOCATE(	AA1(MMAX),RX1(MMAX),RY1(MMAX),RZ1(MMAX),
	-			AA2(MMAX),RX2(MMAX),RY2(MMAX),RZ2(MMAX),
	-			B12(MMAX),EVEC(MMAX),S(MMAX,MMAX),H(MMAX,MMAX),
     -			CO(MMAX),GRAD(MMAX*6),T1(MMAX),T2(MMAX),
     -			T3(MMAX),ENRGY(LOOP),STAT=ERROR)
C
	IF (ERROR .NE. 0) STOP '!NOT ENOUGH MEMORY SPACE AVAILABLE ON THIS
	- BOX! ...ABORTING!'
C
	OPEN (7, FILE = FILENAME, ACCESS = 'SEQUENTIAL',
     -		STATUS = 'UNKNOWN')
C     -----------------------------------------------------
      WRITE(6,*)'Correlated Gaussian Geminal Output:  H_2'
      WRITE(6,*)'==================================================='
      WRITE(6,*)'Adamowicz Research /            [Univ. of AZ, CHEM]'
      WRITE(6,*)'Programming:[D. Gilmore, L. Adamowicz, D. Kinghorn]' 
C      
      WRITE (6,*) ' Current date and time stamp...'
      CALL GETDAT(tmpyear, tmpmonth, tmpday)
      CALL GETTIM(tmphour, tmpminute, tmpsecond, tmphund)  
      WRITE (6, 9001) tmpmonth, tmpday, tmpyear
      WRITE (6, 9002) tmphour, tmpminute, tmpsecond, tmphund
      WRITE(6,*)'OUTPUT STREAM BEGINS...'
      WRITE(7,*)'Correlated Gaussian Geminal Output:  H_2'
      WRITE(7,*)'==================================================='
      WRITE(7,*)'Adamowicz Research /            [Univ. of AZ, CHEM]'
      WRITE(7,*)'Programming:[D. Gilmore, L. Adamowicz, D. Kinghorn]' 
C      
      WRITE (7,*) ' PROGRAM BEGINS:  TIME STAMP...'
      CALL GETDAT(tmpyear, tmpmonth, tmpday)
      CALL GETTIM(tmphour, tmpminute, tmpsecond, tmphund)  
      WRITE (7, 9003) tmpmonth, tmpday, tmpyear
      WRITE (7, 9004) tmphour, tmpminute, tmpsecond, tmphund
      WRITE(7,*)'OUTPUT STREAM BEGINS...'
	CALL BIOUT(' ')
C     -----------------------------------------------------
	IF(METHODOPT.EQ.0) METHODNAME='IMSL:DUMINF'
	IF(METHODOPT.EQ.1) METHODNAME='IMSL:DUMING'
	IF(METHODGEN.EQ.0) GENNAME='READ FROM FILE'
	IF(METHODGEN.EQ.1) GENNAME='RANDOM'
	IF(RESTART) THEN
		M=0
		GENNAME="RESTART"
	END IF
		WRITE(6,*)'NUMBER OF FUNCTIONS=',M
		WRITE(6,*)'FUNCTION GENERATION=',GENNAME
		WRITE(6,*)'OPTIMIZATION METHOD=',METHODNAME
		WRITE(6,*)'    OUTPUT FILENAME=',FILENAME
	    WRITE(6,*)' NEW RESTART OUTPUT=',RESTARTOUTPUT
	IF(RESTART) WRITE(6,*)'       RESTART FROM=',RESTARTNAME
C
		WRITE(7,*)'NUMBER OF FUNCTIONS=',M
		WRITE(7,*)'FUNCTION GENERATION=',GENNAME
		WRITE(7,*)'OPTIMIZATION METHOD=',METHODNAME
		WRITE(7,*)'    OUTPUT FILENAME=',FILENAME
	    WRITE(7,*)' NEW RESTART OUTPUT=',RESTARTOUTPUT
	IF(RESTART) WRITE(7,*)'       RESTART FROM=',RESTARTNAME
	CALL BIOUT(' ')
C     -----------------------------------------------------
C     LOAD DATA:
C     -----------------------------------------------------
	IF (RESTART.EQ.1) GOTO 212
	CALL GUESS(METHODGEN,M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC)
      GOTO 313
 212	CALL BIOUT('STARTING FROM DESIGNATED RESTART POINT!')
	WRITE(6,*)' Point taken from File = ',RESTARTNAME
	WRITE(7,*)' Point taken from File = ',RESTARTNAME
	CALL BIOUT(' ')
	CLOSE (8)
	OPEN (5,FILE=RESTARTNAME)
 414		READ(5,*)rSTR
		IF (rSTR .NE. ':BEGIN:') GOTO 414
	READ(5,*)M
		WRITE(6,*)'NUMBER OF FUNCTIONS IN RESTART=',M
		WRITE(7,*)'NUMBER OF FUNCTIONS IN RESTART=',M
	CALL BIOUT(' ')
  	MMAX=M
	DEALLOCATE (AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,CO,
	-			GRAD,T1,T2,T3)
      ALLOCATE(	AA1(MMAX),RX1(MMAX),RY1(MMAX),RZ1(MMAX),
	-			AA2(MMAX),RX2(MMAX),RY2(MMAX),RZ2(MMAX),
	-			B12(MMAX),EVEC(MMAX),S(MMAX,MMAX),H(MMAX,MMAX),
     -			CO(MMAX),GRAD(MMAX*6),T1(MMAX),T2(MMAX),
     -			T3(MMAX),STAT=ERROR)
C
	IF (ERROR .NE. 0) STOP '!NOT ENOUGH MEMORY SPACE AVAILABLE ON THIS
	- BOX! ...ABORTING!'
	DO J=1,M
		READ(5,*) I,EVEC(J),T1(J),T2(J),T3(J),RZ1(J),RZ2(J)
	RX1(J)=0.00D+00
	RX2(J)=0.00D+00
	RY1(J)=0.00D+00
	RY1(J)=0.00D+00
	END DO
	
     	CLOSE (5)
	OPEN (8, FILE = RESTARTOUTPUT, ACCESS = 'SEQUENTIAL',
     -		STATUS = 'UNKNOWN')
C     -----------------------------------------------------
C
C     HAMILTONIAN SUBROUTINE:  Calcs. overlap & energy...
C     -----------------------------------------------------


C	IF (RESTART .EQ. 1) GOTO 323
C	WRITE(6,*)'Ts ALTERED'
 313	DO I=1,M
			T1(I)=AA1(I)	
			T2(I)=AA2(I)	
			T3(I)=B12(I)	
	END DO
C
	EVEC(1) = 1.857782639928229
	EVEC(2) = -7.849410221418250E-001
	EVEC(3) = 1.876877529015547E-001

	T1(1) = 4.561410939291589E-001
	T1(2) = 4.269328806105867E-001
	T1(3) = 3.204963673589610E-001

	T2(1) = 1.096911065115063
	T2(2) = 1.150451490323712
	T2(3) = 4.123647197265905E-001

	T3(1) = 6.558798804559228E-002
	T3(2) = 1.258663731847043E-001
	T3(3) = -5.162908525937118E-003

	RZ1(1) = 6.257076418158362E-001
	RZ1(2) = 7.471152510420548E-001
	RZ1(3) = 6.995209576329462E-001

	RZ2(1) = -7.158512321801598E-001
	RZ2(2) = -6.845731414701892E-001
	RZ2(3) = -6.986716481431369E-001

	RX1(1) = 0.00D+00
	RX1(2) = 0.00D+00
	RX1(3) = 0.00D+00

	RY2(1) = 0.00D+00
	RY2(2) = 0.00D+00
	RY2(3) = 0.00D+00
C
 323  DO I=1,M
	    AA1(I)=T1(I)**2 + T1(I)*T3(I)
          AA2(I)=T2(I)**2 + T3(I)**2 + T1(I)*T3(I)
          B12(I)=-T1(I)*T3(I)

c	write(6,*)I,AA1(I),AA2(I),B12(I),RZ1(I),RZ2(I)
C
C		WRITE(6,292)I,AA1(I),AA2(I),RZ1(I),RZ2(I)
	END DO
C
C	STOP
C
	CALL BIOUT(' ')
!	 CALL BIOUT('BEGINNING TIMING ROUTINE...Please Stand By...')
C	 CALL BIOUT('---------------------------------------------')
C      CALL GETTIM(tmphour, tmpminute, tmpsecond, tmphund)  
C	 CALL BIOUT(':BEGIN:')
C      WRITE (7, 9004) tmphour, tmpminute, tmpsecond, tmphund
C      WRITE (6, 9004) tmphour, tmpminute, tmpsecond, tmphund
	DELTA=1.00D-09
      DFLAG=3
C	IF (PREOPT .EQ. 1) THEN DFLAG=1
C	 CALL BIOUT(':FUNCTION CALCULATION IN PROGRESS:')
	CALL HAMILTON(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,
	-				CO,EMIN,GRAD,T1,T2,T3,DFLAG)
	R1=EMIN
	DFLAG=1
	CALL HAMILTON(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,
	-				CO,EMIN,GRAD,T1,T2,T3,DFLAG)
	AA1(1)=AA1(1)+DELTA
	DFLAG=3
	CALL HAMILTON(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,
	-				CO,EMIN,GRAD,T1,T2,T3,DFLAG)
	R2=EMIN
	WRITE(6,*)'FINITE DIFFERENCE=',(R2-R1)/DELTA
	WRITE(6,*)'ANALYTIC GRADIENT=',GRAD(1)
		
	STOP


	WRITE(6,*)'ENERGY=',EMIN
c	STOP
C
	IF (PREOPT .EQ. 1) THEN
			CALL GRADOPT(M,T1,RX1,RY1,RZ1,T2,RX2,RY2,RZ2,T3,EVEC,GRAD)
	DO NNN=1,M
		AA1(NNN)=T1(NNN)**2 +T1(NNN)*T3(NNN)
		AA2(NNN)=T2(NNN)**2 + T3(NNN)**2 +T1(NNN)*T3(NNN)
		B12(NNN)=-T1(NNN)*T3(NNN)
	END DO
      DEFLAG=0
	CALL HAMILTON(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,
	-				CO,EMIN,GRAD,T1,T2,T3,DFLAG)
	END IF
C
	ENER=EMIN
	WRITE(6,*)'STARTING WITH ',M,' FUNCTIONS...'
	WRITE(6,*)'STARTING ENERGY=',ENER
C
	DO J=1,M
		EVEC(J)=CO(J)
	END DO
C
	XRX1=0.00D+00
	XRY1=0.00D+00
	XRX2=0.00D+00
	XRY2=0.00D+00
C
C      CALL GETTIM(tmphour, tmpminute, tmpsecond, tmphund)  
C      WRITE (7, 9004) tmphour, tmpminute, tmpsecond, tmphund
C      WRITE (6, 9004) tmphour, tmpminute, tmpsecond, tmphund
C
C	 DFLAG=1
C	 CALL BIOUT(':GRADIENT CALCULATION IN PROGRESS:')
C	 CALL HAMILTON(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,
C	-				CO,EMIN,GRAD,T1,T2,T3,DFLAG)
C      CALL GETTIM(tmphour, tmpminute, tmpsecond, tmphund)  
C      WRITE (7, 9004) tmphour, tmpminute, tmpsecond, tmphund
C      WRITE (6, 9004) tmphour, tmpminute, tmpsecond, tmphund
CC
C	CALL BIOUT(':END:')
C	CALL BIOUT(' ')
C     -----------------------------------------------------
C      WRITE(6,*) '           UNOPTIMIZED ENERGY = ',EMIN
C      WRITE(7,*) '           UNOPTIMIZED ENERGY = ',EMIN
C      CALL BIOUT(' ')
C      WRITE (7,*) ' UNOPTIMIZED ENERGY ROUTINE FINISHES:  TIME STAMP...'
C      WRITE (6,*) ' UNOPTIMIZED ENERGY ROUTINE FINISHES:  TIME STAMP...'
C
C	CALL BIOUT(' ')
C      CALL BIOUT('     LinCoeff:.   AA1:        AA2:        B12:        
C	-RZ1:       RZ2:')
C      CALL BIOUT('FNC: =================================================
C     -=====================')
C      DO J=1,M
C          WRITE(6,1111) J,EVEC(J),AA1(J),AA2(J),B12(J),RZ1(J),RZ2(J)
C          WRITE(7,1111) J,EVEC(J),AA1(J),AA2(J),B12(J),RZ1(J),RZ2(J)
C	END DO
C
C
	CALL SEED(RND$TIMESEED)
C
	BD=1.4011D+00
      FMAX=10.00D+00
	FMIN=-7.00D+00
	ZMAX=1.70D+00
	BL0=0.7D+00
	BL1=1.3D+00
	BLURBEGIN=5.
	BLUREND=-7.
	BETAMAX=5.
	BETAMIN=-5.
C
C	IVIEW=4000
	IVIEW=4000
	ZNUC=BD/2.00D+00
C
	A=FMAX-FMIN
	B=FMIN
C
	CALL RANDOM(TEMP)
	TEMP1=TEMP
C
	K=-DLOG(0.0001)/(ZMAX-ZNUC)
	KA=-DLOG(0.0001)/(ZNUC)
C
C
C
	IF (STGROW .EQ. 0) THEN
C
	DO JJJ=M,ISTEND
	DO I=1,IVIEW
	IF (TEMP1.GE..5) THEN
C
		CALL RANDOM(TEMP)
		TEMP1=TEMP
 4141		CALL RANDOM(TEMP)
		TEMP2=TEMP
	IF (TEMP2.LT..5) GOTO 4141
	TOF1=(FMAX-FMIN)*TEMP1+FMIN
	XAA1=TEMP2*10**TOF1
C
		CALL RANDOM(TEMP)
		TEMP1=TEMP
 5151		CALL RANDOM(TEMP)
		TEMP2=TEMP
	IF (TEMP2.LT..5) GOTO 5151
	TOF2=(FMAX-FMIN)*TEMP1+FMIN
	XAA2=TEMP2*10**TOF2
C
C	XXX1=(TOF1+DABS(FMIN)+1.+D-(DABS(FMIN)+1.))/C
C	XXX2=(TOF2+DABS(FMIN)+1.+D-(DABS(FMIN)+1.))/C
C	XRZ1=-(-SIGMAP *DLOG(XXX1))+ZNUC
	XRZ1=-DLOG((TOF1+DABS(FMIN))/(FMAX-FMIN))/K + ZNUC
C	XRZ2=-(-SIGMAP *DLOG(XXX2))+ZNUC
	XRZ2=-DLOG((TOF2+DABS(FMIN))/(FMAX-FMIN))/K + ZNUC
	CALL RANDOM(TEMP)
	TEMP1=TEMP
	IF (TEMP1.GE..5) XRZ1=-1.*XRZ1
	CALL RANDOM(TEMP)
	TEMP1=TEMP
	IF (TEMP1.GE..5) XRZ2=-1*XRZ2
	IF (BL0.GT.0.) THEN
		CALL RANDOM(TEMP)
	TEMP1=TEMP
		XC=1
		IF (TEMP1.GE..5) XC=-1.
	CALL RANDOM(TEMP)
		TEMP1=TEMP
		IF (TOF1 .LE. BLURBEGIN) THEN
		XRZ1=XRZ1+XC*DSQRT(-2.*BL0**2 * DLOG(TEMP1))* 
 	-		(BLURBEGIN-TOF1)/(BLURBEGIN-BLUREND)
		END IF	
C
		CALL RANDOM(TEMP)
	TEMP1=TEMP
		XC=1
		IF (TEMP1.GE..5) XC=-1.
	CALL RANDOM(TEMP)
		TEMP1=TEMP
		IF (TOF2 .LE. BLURBEGIN) THEN
		XRZ2=XRZ2+XC*DSQRT(-2.*BL0**2 * DLOG(TEMP1))* 
  	-		(BLURBEGIN-TOF2)/(BLURBEGIN-BLUREND)
		END IF
C
	END IF
C
C
	ELSE
		CALL RANDOM(TEMP)
		TEMP1=TEMP
 2121		CALL RANDOM(TEMP)
		TEMP2=TEMP
	IF (TEMP2.LT..5) GOTO 2121
	TOF1=(FMAX-FMIN)*TEMP1+FMIN
	XAA1=TEMP2*10**TOF1
C
		CALL RANDOM(TEMP)
		TEMP1=TEMP
 3131		CALL RANDOM(TEMP)
		TEMP2=TEMP
	IF (TEMP2.LT..5) GOTO 3131
	TOF2=(FMAX-FMIN)*TEMP1+FMIN
	XAA2=TEMP2*10**TOF2
C
C	XXX1=(TOF1+DABS(FMIN)+1.+B-(DABS(FMIN)+1.))/A
C	XXX2=(TOF2+DABS(FMIN)+1.+B-(DABS(FMIN)+1.))/A
C	XRZ1=(-SIGMA *DLOG(XXX1))+ZNUC
C	XRZ2=(-SIGMA *DLOG(XXX2))+ZNUC
	XRZ1=-DLOG((TOF1+DABS(FMIN))/(FMAX-FMIN))/KA - ZNUC
	XRZ2=-DLOG((TOF2+DABS(FMIN))/(FMAX-FMIN))/KA - ZNUC
	CALL RANDOM(TEMP)
	TEMP1=TEMP
	IF (TEMP1.GE..5) XRZ1=-1.*XRZ1
	CALL RANDOM(TEMP)
	TEMP1=TEMP
	IF (TEMP1.GE..5) XRZ2=-1*XRZ2
C
	IF (BL1.GT.0.) THEN
		CALL RANDOM(TEMP)
	TEMP1=TEMP
		XC=1
		IF (TEMP1.GE..5) XC=-1.
	CALL RANDOM(TEMP)
		TEMP1=TEMP
		IF (TOF1 .LE. BLURBEGIN) THEN
		XRZ1=XRZ1+XC*DSQRT(-2.*BL1**2 * DLOG(TEMP1))* 
  	-		(BLURBEGIN-TOF1)/(BLURBEGIN-BLUREND)
		END IF
	
C
		CALL RANDOM(TEMP)
	TEMP1=TEMP
		XC=1
		IF (TEMP1.GE..5) XC=-1.
	CALL RANDOM(TEMP)
		TEMP1=TEMP
		IF (TOF2 .LE. BLURBEGIN) THEN
		XRZ2=XRZ2+XC*DSQRT(-2.*BL1**2 * DLOG(TEMP1))* 
  	-		(BLURBEGIN-TOF2)/(BLURBEGIN-BLUREND)

		END IF
C
	END IF


C
	END IF
	CALL RANDOM(TEMP)
	TEMP1=TEMP
	CALL RANDOM(TEMP)
	TEMP2=TEMP
	XB12=DABS(TEMP1*10.**(((BETAMAX+1.)-(BETAMIN+1))*
	-TEMP2+(BETAMIN+1)))
C	WRITE(6,*)'BETA=',XB12
C	WRITE(6,292)I,XAA1,XAA2,XRZ1,XRZ2
	CALL HAMILTONp(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,
     1                    EVEC,S,H,EMIN,XAA1,XRX1,XRY1,XRZ1,
     2					XAA2,XRX2,XRY2,XRZ2,XB12)
	IF (I .EQ. 1) ENER=EMIN
	IF (EMIN.LT.ENER) THEN 
		ENER=EMIN
		TA1=XAA1
		TA2=XAA2
		TB12=XB12
		TRZ1=XRZ1
		TRZ2=XRZ2
	END IF
      END DO
C	STOP
C
 292	FORMAT(I4,4D24.8)
	CALL BIOUT(' ')
	WRITE(6,*)'BEST DIAGNOSTIC VALUE IN ',IVIEW,' GUESSES=',ENER
C	WRITE(6,*)TA1,TRZ1,TA2,TRZ2,TB12
	WRITE(6,*)'***************************'
	WRITE(6,*)'ADDING THIS FUNCTION TO Psi'
	WRITE(6,*)'***************************'
	ALLOCATE(EVECSTORET(M),TSTORE1T(M),
     -			TSTORE2T(M),TSTORE3T(M),
     -			RZ1STORET(M),RZ2STORET(M),
     -			STAT=ERROR)
	DO III=1,M
		EVECSTORET(III)=EVEC(III)
		TSTORE1T(III)=AA1(III)
		TSTORE2T(III)=AA2(III)
		TSTORE3T(III)=B12(III)
		RZ1STORET(III)=RZ1(III)
		RZ2STORET(III)=RZ2(III)
	END DO
	M=M+1
	DEALLOCATE (AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,CO,
	-			GRAD,T1,T2,T3)
      ALLOCATE(	AA1(M),RX1(M),RY1(M),RZ1(M),
	-			AA2(M),RX2(M),RY2(M),RZ2(M),
	-			B12(M),EVEC(M),S(M,M),H(M,M),
     -			CO(M),GRAD(M*6),T1(M),T2(M),
     -			T3(M),STAT=ERROR)

	DO III=1,M-1
		EVEC(III)=EVECSTORET(III)
	AA1(III)=TSTORE1T(III)
	AA2(III)=TSTORE2T(III)
	B12(III)=TSTORE3T(III)
	RZ1(III)=RZ1STORET(III)
	RZ2(III)=RZ2STORET(III)
	RX1(III)=0.
	RY1(III)=0.
	RY2(III)=0.
	RX2(III)=0.
	END DO
	AA1(M)=TA1
	AA2(M)=TA2
	B12(M)=TB12
	RZ1(M)=TRZ1
	RZ2(M)=TRZ2
	RX1(M)=0.
	RY1(M)=0.
	RY2(M)=0.
	RX2(M)=0.


	DEALLOCATE(EVECSTORET,TSTORE1T,TSTORE2T,TSTORE3T,
     -			RZ1STORET,RZ2STORET,STAT=ERROR)
C
	DFLAG=0
	CALL HAMILTON(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,
	-				CO,EMIN,GRAD,T1,T2,T3,DFLAG)
	DO NNN=1,M
		EVEC(NNN)=CO(NNN)
	END DO
	WRITE(6,*)'NOW WE HAVE',M,' FUNCTIONS...'
	WRITE(6,*)'EXACT ENERGY=',EMIN
C	IDOIT=0
C	IF (IDOIT.EQ.1)	THEN
	WRITE(6,*)'********************************'
	WRITE(6,*)'PERFORMING GRADIENT OPTIMIZATION'
	WRITE(6,*)'********************************'
	DO NNN=1,M
		EVEC(NNN)=CO(NNN)
	END DO
	DO NNN=1,M
		T1(NNN)=DSQRT(AA1(NNN)+B12(NNN))
		T2(NNN)=DSQRT(AA2(NNN)+B12(NNN)- ((B12(NNN)**2)/(AA1(NNN)
	-		+B12(NNN))))
		T3(NNN)=-B12(NNN)/DSQRT(AA1(NNN)+B12(NNN))
C	WRITE(6,*)'A1 ->',AA1(NNN),T1(NNN)**2 +T1(NNN)*T3(NNN)
C	WRITE(6,*)'A2 ->',AA2(NNN),T2(NNN)**2 +T3(NNN)**2 +T1(NNN)*T3(NNN)
C	WRITE(6,*)'B12->',B12(NNN),-T1(NNN)*T3(NNN)
C	WRITE(6,*)'-------------------------'
	END DO
	DEFLAG=1
	CALL HAMILTON(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,
	-				CO,EMIN,GRAD,T1,T2,T3,DFLAG)
	WRITE(6,*)'PRE-OPTIMIZATION ENERGY --->',EMIN
	CALL GRADOPT(M,T1,RX1,RY1,RZ1,T2,RX2,RY2,RZ2,T3,EVEC,GRAD)
	DO NNN=1,M
		AA1(NNN)=T1(NNN)**2 +T1(NNN)*T3(NNN)
		AA2(NNN)=T2(NNN)**2 + T3(NNN)**2 +T1(NNN)*T3(NNN)
		B12(NNN)=-T1(NNN)*T3(NNN)
	END DO
C
	CALL HAMILTON(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,
	-				CO,EMIN,GRAD,T1,T2,T3,DFLAG)
	DO J=1,M
		EVEC(J)=CO(J)
	END DO
C
C	END IF
	END DO
C
C
	END IF
C
C
C
	IF (STGROW .EQ. 1) THEN
	WRITE(6,*)'STOCHASTIC GROWTH PERCENTAGE=',STGROWPER/100.0D+00
	WRITE(7,*)'STOCHASTIC GROWTH PERCENTAGE=',STGROWPER/100.0D+00
	CALL BIOUT(' ')
C
	DO WHILE (M .LE. ISTEND)
		ITEMP=INT((STGROWPER/100.0D+00)*M)
		IF (ITEMP .LE. 0) ITEMP=1
		IF (ITEMP+M .GT. ISTEND) ITEMP=ISTEND-M
	DO KKK=1,ITEMP
C
C
	DO I=1,IVIEW
	IF (TEMP1.GE..5) THEN
C
		CALL RANDOM(TEMP)
		TEMP1=TEMP
 8141		CALL RANDOM(TEMP)
		TEMP2=TEMP
	IF (TEMP2.LT..5) GOTO 8141
	TOF1=(FMAX-FMIN)*TEMP1+FMIN
	XAA1=TEMP2*10**TOF1
C
		CALL RANDOM(TEMP)
		TEMP1=TEMP
 8151		CALL RANDOM(TEMP)
		TEMP2=TEMP
	IF (TEMP2.LT..5) GOTO 8151
	TOF2=(FMAX-FMIN)*TEMP1+FMIN
	XAA2=TEMP2*10**TOF2
C
C	XXX1=(TOF1+DABS(FMIN)+1.+D-(DABS(FMIN)+1.))/C
C	XXX2=(TOF2+DABS(FMIN)+1.+D-(DABS(FMIN)+1.))/C
C	XRZ1=-(-SIGMAP *DLOG(XXX1))+ZNUC
	XRZ1=-DLOG((TOF1+DABS(FMIN))/(FMAX-FMIN))/K + ZNUC
C	XRZ2=-(-SIGMAP *DLOG(XXX2))+ZNUC
	XRZ2=-DLOG((TOF2+DABS(FMIN))/(FMAX-FMIN))/K + ZNUC
	CALL RANDOM(TEMP)
	TEMP1=TEMP
	IF (TEMP1.GE..5) XRZ1=-1.*XRZ1
	CALL RANDOM(TEMP)
	TEMP1=TEMP
	IF (TEMP1.GE..5) XRZ2=-1*XRZ2
	IF (BL0.GT.0.) THEN
		CALL RANDOM(TEMP)
	TEMP1=TEMP
		XC=1
		IF (TEMP1.GE..5) XC=-1.
	CALL RANDOM(TEMP)
		TEMP1=TEMP
		IF (TOF1 .LE. BLURBEGIN) THEN
		XRZ1=XRZ1+XC*DSQRT(-2.*BL0**2 * DLOG(TEMP1))* 
 	-		(BLURBEGIN-TOF1)/(BLURBEGIN-BLUREND)
		END IF	
C
		CALL RANDOM(TEMP)
	TEMP1=TEMP
		XC=1
		IF (TEMP1.GE..5) XC=-1.
	CALL RANDOM(TEMP)
		TEMP1=TEMP
		IF (TOF2 .LE. BLURBEGIN) THEN
		XRZ2=XRZ2+XC*DSQRT(-2.*BL0**2 * DLOG(TEMP1))* 
  	-		(BLURBEGIN-TOF2)/(BLURBEGIN-BLUREND)
		END IF
C
	END IF
C
C
	ELSE
		CALL RANDOM(TEMP)
		TEMP1=TEMP
 9121		CALL RANDOM(TEMP)
		TEMP2=TEMP
	IF (TEMP2.LT..5) GOTO 9121
	TOF1=(FMAX-FMIN)*TEMP1+FMIN
	XAA1=TEMP2*10**TOF1
C
		CALL RANDOM(TEMP)
		TEMP1=TEMP
 9131		CALL RANDOM(TEMP)
		TEMP2=TEMP
	IF (TEMP2.LT..5) GOTO 9131
	TOF2=(FMAX-FMIN)*TEMP1+FMIN
	XAA2=TEMP2*10**TOF2
C
C	XXX1=(TOF1+DABS(FMIN)+1.+B-(DABS(FMIN)+1.))/A
C	XXX2=(TOF2+DABS(FMIN)+1.+B-(DABS(FMIN)+1.))/A
C	XRZ1=(-SIGMA *DLOG(XXX1))+ZNUC
C	XRZ2=(-SIGMA *DLOG(XXX2))+ZNUC
	XRZ1=-DLOG((TOF1+DABS(FMIN))/(FMAX-FMIN))/KA - ZNUC
	XRZ2=-DLOG((TOF2+DABS(FMIN))/(FMAX-FMIN))/KA - ZNUC
	CALL RANDOM(TEMP)
	TEMP1=TEMP
	IF (TEMP1.GE..5) XRZ1=-1.*XRZ1
	CALL RANDOM(TEMP)
	TEMP1=TEMP
	IF (TEMP1.GE..5) XRZ2=-1*XRZ2
C
	IF (BL1.GT.0.) THEN
		CALL RANDOM(TEMP)
	TEMP1=TEMP
		XC=1
		IF (TEMP1.GE..5) XC=-1.
	CALL RANDOM(TEMP)
		TEMP1=TEMP
		IF (TOF1 .LE. BLURBEGIN) THEN
		XRZ1=XRZ1+XC*DSQRT(-2.*BL1**2 * DLOG(TEMP1))* 
  	-		(BLURBEGIN-TOF1)/(BLURBEGIN-BLUREND)
		END IF
	
C
		CALL RANDOM(TEMP)
	TEMP1=TEMP
		XC=1
		IF (TEMP1.GE..5) XC=-1.
	CALL RANDOM(TEMP)
		TEMP1=TEMP
		IF (TOF2 .LE. BLURBEGIN) THEN
		XRZ2=XRZ2+XC*DSQRT(-2.*BL1**2 * DLOG(TEMP1))* 
  	-		(BLURBEGIN-TOF2)/(BLURBEGIN-BLUREND)

		END IF
C
	END IF


C
	END IF
	CALL RANDOM(TEMP)
	TEMP1=TEMP
	CALL RANDOM(TEMP)
	TEMP2=TEMP
	XB12=DABS(TEMP1*10.**(((BETAMAX+1.)-(BETAMIN+1))*
	-TEMP2+(BETAMIN+1)))
C	WRITE(6,*)'BETA=',XB12
C	WRITE(6,292)I,XAA1,XAA2,XRZ1,XRZ2
	CALL HAMILTONp(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,
     1                    EVEC,S,H,EMIN,XAA1,XRX1,XRY1,XRZ1,
     2					XAA2,XRX2,XRY2,XRZ2,XB12)
	IF (I .EQ. 1) ENER=EMIN
	IF (EMIN.LT.ENER) THEN 
		ENER=EMIN
		TA1=XAA1
		TA2=XAA2
		TB12=XB12
		TRZ1=XRZ1
		TRZ2=XRZ2
	END IF
      END DO
	CALL BIOUT(' ')
	WRITE(6,*)'BEST DIAGNOSTIC VALUE IN ',IVIEW,' GUESSES=',ENER
C	WRITE(6,*)TA1,TRZ1,TA2,TRZ2,TB12
	WRITE(6,*)'***************************'
	WRITE(6,*)'ADDING THIS FUNCTION TO Psi'
	WRITE(6,*)'***************************'
	ALLOCATE(EVECSTORET(M),TSTORE1T(M),
     -			TSTORE2T(M),TSTORE3T(M),
     -			RZ1STORET(M),RZ2STORET(M),
     -			STAT=ERROR)
	DO III=1,M
		EVECSTORET(III)=EVEC(III)
		TSTORE1T(III)=AA1(III)
		TSTORE2T(III)=AA2(III)
		TSTORE3T(III)=B12(III)
		RZ1STORET(III)=RZ1(III)
		RZ2STORET(III)=RZ2(III)
	END DO
	M=M+1
	DEALLOCATE (AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,CO,
	-			GRAD,T1,T2,T3)
      ALLOCATE(	AA1(M),RX1(M),RY1(M),RZ1(M),
	-			AA2(M),RX2(M),RY2(M),RZ2(M),
	-			B12(M),EVEC(M),S(M,M),H(M,M),
     -			CO(M),GRAD(M*6),T1(M),T2(M),
     -			T3(M),STAT=ERROR)

	DO III=1,M-1
		EVEC(III)=EVECSTORET(III)
	AA1(III)=TSTORE1T(III)
	AA2(III)=TSTORE2T(III)
	B12(III)=TSTORE3T(III)
	RZ1(III)=RZ1STORET(III)
	RZ2(III)=RZ2STORET(III)
	RX1(III)=0.
	RY1(III)=0.
	RY2(III)=0.
	RX2(III)=0.
	END DO
	AA1(M)=TA1
	AA2(M)=TA2
	B12(M)=TB12
	RZ1(M)=TRZ1
	RZ2(M)=TRZ2
	RX1(M)=0.
	RY1(M)=0.
	RY2(M)=0.
	RX2(M)=0.


	DEALLOCATE(EVECSTORET,TSTORE1T,TSTORE2T,TSTORE3T,
     -			RZ1STORET,RZ2STORET,STAT=ERROR)
C
	DFLAG=0
	CALL HAMILTON(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,
	-				CO,EMIN,GRAD,T1,T2,T3,DFLAG)
	DO NNN=1,M
		EVEC(NNN)=CO(NNN)
	END DO
	WRITE(6,*)'NOW WE HAVE',M,' FUNCTIONS...'
	WRITE(6,*)'EXACT ENERGY=',EMIN
	END DO
	WRITE(6,*)'********************************'
	WRITE(6,*)'PERFORMING GRADIENT OPTIMIZATION'
	WRITE(6,*)'********************************'
	DO NNN=1,M
		EVEC(NNN)=CO(NNN)
	END DO
	DO NNN=1,M
		T1(NNN)=DSQRT(AA1(NNN)+B12(NNN))
		T2(NNN)=DSQRT(AA2(NNN)+B12(NNN)- ((B12(NNN)**2)/(AA1(NNN)
	-		+B12(NNN))))
		T3(NNN)=-B12(NNN)/DSQRT(AA1(NNN)+B12(NNN))
C	WRITE(6,*)'A1 ->',AA1(NNN),T1(NNN)**2 +T1(NNN)*T3(NNN)
C	WRITE(6,*)'A2 ->',AA2(NNN),T2(NNN)**2 +T3(NNN)**2 +T1(NNN)*T3(NNN)
C	WRITE(6,*)'B12->',B12(NNN),-T1(NNN)*T3(NNN)
C	WRITE(6,*)'-------------------------'
	END DO
	DEFLAG=1
	CALL HAMILTON(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,
	-				CO,EMIN,GRAD,T1,T2,T3,DFLAG)
	WRITE(6,*)'PRE-OPTIMIZATION ENERGY --->',EMIN
	CALL GRADOPT(M,T1,RX1,RY1,RZ1,T2,RX2,RY2,RZ2,T3,EVEC,GRAD)
	DO NNN=1,M
		AA1(NNN)=T1(NNN)**2 +T1(NNN)*T3(NNN)
		AA2(NNN)=T2(NNN)**2 + T3(NNN)**2 +T1(NNN)*T3(NNN)
		B12(NNN)=-T1(NNN)*T3(NNN)
	END DO
C
	CALL HAMILTON(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,
	-				CO,EMIN,GRAD,T1,T2,T3,DFLAG)
	DO J=1,M
		EVEC(J)=CO(J)
	END DO
C
	END DO
C
C
	END IF

C
C	
	CLOSE(7)
	CLOSE(8)
	CLOSE(9)
	STOP
C
      CALL GETDAT(tmpyear, tmpmonth, tmpday)
      CALL GETTIM(tmphour, tmpminute, tmpsecond, tmphund)  
C
      WRITE (6, 9003) tmpmonth, tmpday, tmpyear
      WRITE (6, 9004) tmphour, tmpminute, tmpsecond, tmphund
C
      WRITE (7, 9003) tmpmonth, tmpday, tmpyear
      WRITE (7, 9004) tmphour, tmpminute, tmpsecond, tmphund
C
      CALL BIOUT (' ')
C     -----------------------------------------------------
C	OPTIMIZATION ROUTINE BEGINS...
C     -----------------------------------------------------
	IF (WAVEOPT.EQ.0) THEN
	IF (METHODOPT.EQ.0) THEN
	CALL NGRADOPT(M,T1,RX1,RY1,RZ1,T2,RX2,RY2,RZ2,T3,EVEC,GRAD)
	END IF
	IF (METHODOPT.EQ.1) THEN
	CALL GRADOPT(M,T1,RX1,RY1,RZ1,T2,RX2,RY2,RZ2,T3,EVEC,GRAD)
	END IF
	END IF
C
	IF (WAVEOPT.EQ.1) THEN
	RELOADFLAG=0
	ALLOCATE(EVECSTORE(ENDBASIS,LOOP),TSTORE1(ENDBASIS,LOOP),
     -			TSTORE2(ENDBASIS,LOOP),TSTORE3(ENDBASIS,LOOP),
     -			RZ1STORE(ENDBASIS,LOOP),RZ2STORE(ENDBASIS,LOOP),
     -			STAT=ERROR)
	ALLOCATE(EVECSTORET(ENDBASIS),TSTORE1T(ENDBASIS),
     -			TSTORE2T(ENDBASIS),TSTORE3T(ENDBASIS),
     -			RZ1STORET(ENDBASIS),RZ2STORET(ENDBASIS),
     -			STAT=ERROR)

		DO J=STARTBASIS,ENDBASIS
		M=J
		MMAX=M
C
	IF (ERROR .NE. 0) STOP '!NOT ENOUGH MEMORY SPACE AVAILABLE ON THIS
	- BOX! ...ABORTING!'
C
	DO K=1,LOOP
C
C
	DEALLOCATE (AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,CO,
	-			GRAD,T1,T2,T3)
      ALLOCATE(	AA1(MMAX),RX1(MMAX),RY1(MMAX),RZ1(MMAX),
	-			AA2(MMAX),RX2(MMAX),RY2(MMAX),RZ2(MMAX),
	-			B12(MMAX),EVEC(MMAX),S(MMAX,MMAX),H(MMAX,MMAX),
     -			CO(MMAX),GRAD(MMAX*6),T1(MMAX),T2(MMAX),
     -			T3(MMAX),STAT=ERROR)

		CALL GUESS(METHODGEN,M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,
	-		EVEC)
 		DO I=1,M
			T1(I)=AA1(I)	
			T2(I)=AA2(I)	
			T3(I)=B12(I)	
		END DO
C
C
		IF (RELOADFLAG.EQ.1) THEN
			WRITE(6,*)'HIT RELOAD!'
			DO I=1,M-1
				EVEC(I)=EVECSTORET(I)
				T1(I)=TSTORE1T(I)
				T2(I)=TSTORE2T(I)
				T3(I)=TSTORE3T(I)
				RZ1(I)=RZ1STORET(I)
				RZ2(I)=RZ2STORET(I)
			END DO
			EVEC(M)=0.00D+00		

		END IF

C
		CALL GRADOPT(M,T1,RX1,RY1,RZ1,T2,RX2,RY2,RZ2,T3,EVEC,GRAD)
		DO I=1,M
			AA1(I)=T1(I)**2 + T1(I)*T3(I)
			AA2(I)=T2(I)**2 + T3(I)**2 + T1(I)*T3(I)
			B12(I)=-T1(I)*T3(I)
C
			EVECSTORE(I,K)=EVEC(I)
			TSTORE1(I,K)=T1(I)
			TSTORE2(I,K)=T2(I)
			TSTORE3(I,K)=T3(I)
			RZ1STORE(I,K)=RZ1(I)
			RZ2STORE(I,K)=RZ2(I)
		END DO
	
	CALL HAMILTON(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,
	-				CO,EMIN,GRAD,T1,T2,T3,DFLAG)
		ENRGY(K)=EMIN
	END DO			
	TENRGY=ENRGY(1)
	INDEX=1
      DO K=2,LOOP
		IF (TENRGY.GT.ENRGY(K)) THEN
		INDEX=K
		TENRGY=ENRGY(K)
		END IF
	END DO
	WRITE(6,*)'LOWEST ENERGY = ',ENRGY(INDEX)
	RELOADFLAG=1
	OPEN (9, FILE = OPTIMIZEDWAVE, ACCESS = 'SEQUENTIAL',
     -		STATUS = 'UNKNOWN')
	REWIND(9)
	WRITE(9,*)':BEGIN:'
	DO I=1,M
			EVECSTORET(I)=EVECSTORE(I,INDEX)
			TSTORE1T(I)=TSTORE1(I,INDEX)
			TSTORE2T(I)=TSTORE2(I,INDEX)
			TSTORE3T(I)=TSTORE3(I,INDEX)
			RZ1STORET(I)=RZ1STORE(I,INDEX)
			RZ2STORET(I)=RZ2STORE(I,INDEX)
	WRITE(9,*) I,EVECSTORET(I),TSTORE1T(I),TSTORE2T(I),TSTORE3T(I),
	-RZ1STORET(I),RZ2STORET(I)
	END DO
	WRITE(9,*)':END:'
	WRITE(9,*)'ENERGY=',ENRGY(INDEX)
	CLOSE (9)
		END DO
	END IF
C
      DO I=1,M
	    AA1(I)=T1(I)**2 + T1(I)*T3(I)
          AA2(I)=T2(I)**2 + T3(I)**2 + T1(I)*T3(I)
          B12(I)=-T1(I)*T3(I)
	END DO
C
	CALL BIOUT(' ')
	WRITE(6,*)' Square-Magnitude of the GRADIENT is',GG
	WRITE(7,*)' Square-Magnitude of the GRADIENT is',GG
	CALL BIOUT(' ')
C
C
C
      J=1
      CALL BIOUT('     LinCoeff:.   AA1:        AA2:        B12:        
	-RZ1:       RZ2:')
      CALL BIOUT('FNC: =================================================
     -=====================')
 606  IF (J .LE. M) THEN
          WRITE(6,1111) J,EVEC(J),AA1(J),AA2(J),B12(J),RZ1(J),RZ2(J)
          WRITE(7,1111) J,EVEC(J),AA1(J),AA2(J),B12(J),RZ1(J),RZ2(J)
          J=J+1

      GOTO 606
      END IF
      CALL BIOUT('------------------------------------------------------
     1---------------------')
C
	CALL BIOUT(' ')
C
      DFLAG=0
	CALL HAMILTON(M,AA1,RX1,RY1,RZ1,AA2,RX2,RY2,RZ2,B12,EVEC,S,H,
	-				CO,EMIN,GRAD,T1,T2,T3,DFLAG)
C
	EBEST=-1.1744758915D+00
C
      WRITE(6,*) '           OPTIMIZED ENERGY = ',EMIN
      WRITE(7,*) '           OPTIMIZED ENERGY = ',EMIN
      WRITE(6,*) '           BEST LIT. RESULT = ',EBEST
      WRITE(7,*) '           BEST LIT. RESULT = ',EBEST
	WRITE(6,*) '           ------------------------------------------'
	WRITE(7,*) '           ------------------------------------------'
      WRITE(6,*) '                 DIFFERENCE = ',EMIN-EBEST
      WRITE(7,*) '                 DIFFERENCE = ',EMIN-EBEST
C
C     -----------------------------------------------------
C     FORMAT(s):
C     -----------------------------------------------------
1111  FORMAT(I3,6D12.4)
1007  FORMAT(/) 
9001  FORMAT ('     ',I2, '/', I2.2, '/', I4.4)  
9002  FORMAT ('     ',I2, ':', I2.2, ':', I2.2, ':', I2.2, ' ', A, 'm')
9003  FORMAT ('     ',I2, '/', I2.2, '/', I4.4)  
9004  FORMAT ('     ',I2, ':', I2.2, ':', I2.2, ':', I2.2, ' ', A, 'm')
9005  FORMAT (' Calculation of the FUNCTION requires ',I2, ':', I2.2, 
	-':', I2.2, ' ', A, 'm')
9006  FORMAT (' Calculation of the GRADIENT requires ',I2, ':', I2.2, 
	-':', I2.2, ' ', A, 'm')
C     -----------------------------------------------------
C     TERMINATE PROGRAM EXECUTION!
C     -----------------------------------------------------
      CALL BIOUT(' ')
      WRITE (7,*) ' PROGRAM FINISHES:  TIME STAMP...'
      WRITE (6,*) ' PROGRAM FINISHES:  TIME STAMP...'
C
      CALL GETDAT(tmpyear, tmpmonth, tmpday)
      CALL GETTIM(tmphour, tmpminute, tmpsecond, tmphund)  
C
      WRITE (6, 9003) tmpmonth, tmpday, tmpyear
      WRITE (6, 9004) tmphour, tmpminute, tmpsecond, tmphund
C
      WRITE (7, 9003) tmpmonth, tmpday, tmpyear
      WRITE (7, 9004) tmphour, tmpminute, tmpsecond, tmphund
C
	CLOSE (7)
	CLOSE (8)
	CLOSE (9)
      END